// <auto-generated />
using System;
using BeyondSuccessWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeyondSuccessWeb.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeyondSuccessWeb.Models.Entities.Cohort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CohortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CohortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cohorts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CohortName = "Cohort1",
                            CreatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7690),
                            StartDate = new DateOnly(2002, 7, 27),
                            UpdatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7680)
                        },
                        new
                        {
                            Id = 2,
                            CohortName = "Cohort2",
                            CreatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7698),
                            StartDate = new DateOnly(2010, 7, 27),
                            UpdatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7697)
                        });
                });

            modelBuilder.Entity("BeyondSuccessWeb.Models.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CohortId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CohortId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CohortId = 2,
                            CreatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7820),
                            EmailAddress = "eluid@email.com",
                            FirstName = "Eluid",
                            LastName = "Kipchoge",
                            PhoneNumber = "+2548708988",
                            UpdatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7819)
                        },
                        new
                        {
                            Id = 2,
                            CohortId = 2,
                            CreatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7823),
                            EmailAddress = "kinyanjuiSimon@email.com",
                            FirstName = "Simon",
                            LastName = "Kinyanjui",
                            PhoneNumber = "+2548708988",
                            UpdatedAt = new DateTime(2024, 11, 6, 19, 39, 34, 120, DateTimeKind.Local).AddTicks(7823)
                        });
                });

            modelBuilder.Entity("BeyondSuccessWeb.Models.Entities.Member", b =>
                {
                    b.HasOne("BeyondSuccessWeb.Models.Entities.Cohort", "Cohort")
                        .WithMany("Members")
                        .HasForeignKey("CohortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cohort");
                });

            modelBuilder.Entity("BeyondSuccessWeb.Models.Entities.Cohort", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
